/* @org.eclipse.vjet.dsf.resource.utils.CodeGen("VjoGenerator") */
vjo.ctype('org.eclipse.vjet.dsf.javatojs.tests.data.structure.Statements') //< public
.needs('org.eclipse.vjet.vjo.java.util.ArrayList')
//> needs org.eclipse.vjet.vjo.java.util.List
.protos({
    //> public void forLoop()
    forLoop:function(){
        var j,p=5; //<int
        var total=10; //<int
        for (var i=0;i<total+5;i++){
            total+=i*10;
            for (var k=0;k<5;k++){
                total+=(i+k)*10+k;
            }
        }
        for (var m=0,n=0;m<100;--m,n--){
            n++;
        }
        for (p+=2;p<10;p++){
        }
        for (j=0;;){
            j++;
            if(j>=total){
                break;
            }
            continue;
        }
        for (;j<10;){
        }
        for (;j<10;){
            if(j>0){
                j++;
            }
        }
        for (;j<10;j+=2){
        }
        for (;;){
        }
    },
    //> public void forInIterable()
    forInIterable:function(){
        var list=this.getList(); //<List
        for (var ele,_$itr=list.iterator();_$itr.hasNext();){
            ele=_$itr.next();
            ele.length;
        }
        for (var ele,_$itr=list.iterator();_$itr.hasNext();){
            ele=_$itr.next();
            if(ele===null){
                break;
            }
        }
    },
    //> void forInIterableB()
    forInIterableB:function(){
        for (var ele,_$itr=this.getList().iterator();_$itr.hasNext();){
            ele=_$itr.next();
            ele.length;
        }
        for (var ele,_$itr=this.getList().iterator();_$itr.hasNext();){
            ele=_$itr.next();
            if(ele===null){
                break;
            }
        }
    },
    //> private List<String> getList()
    getList:function(){
        var list=new this.vj$.ArrayList(); //<List
        list.add("A");
        list.add("B");
        return list;
    },
    //> void forInArrayA()
    forInArrayA:function(){
        var elements=this.getArray(); //<String[]
        for (var ele,_$i0=0;_$i0<elements.length;_$i0++){
            ele=elements[_$i0];
            ele.length;
        }
    },
    //> void forInArrayB()
    forInArrayB:function(){
        for (var ele,_$arr=this.getArray(),_$i1=0;_$i1<_$arr.length;_$i1++){
            ele=_$arr[_$i1];
            ele.length;
        }
    },
    //> private String[] getArray()
    getArray:function(){
        return ["A","B"];
    },
    //> public void whileLoop()
    whileLoop:function(){
        var total=10; //<int
        while(total>0){
            total--;
            if(total<5){
                break;
            }else {
                continue;
            }
        }
        while(total>0){
            --total;
        }
    },
    //> public void doWhile()
    doWhile:function(){
        var i=3; //<int
        do{
            i--;
        }while(i>0);
    },
    //> public int ifElse(int total)
    ifElse:function(total){
        if(total>10){
            return 1;
        }else if(total>100){
            return 2;
        }else {
            return 3;
        }
    },
    //> public int ifElse2(int total)
    ifElse2:function(total){
        if(total>10){
            return 1;
        }else if(total>100){
            return 2;
        }else {
            return 3;
        }
    },
    //> public String switchStmt(int id)
    switchStmt:function(id){
        var msg="Msg for "; //<String
        var count=0; //<int
        switch(id*10){
            case 1:
                count++;
                msg=msg+id;
                break;
            case 2:
            case 3:
            case 4+3:
            {
                count++;
                return msg=msg+id*10;
            }
            default: 
                switch(id){
                    case 2:
                    case 3:
                    case 4+3:
                        count++;
                        return msg=msg+id*10;
                    default: 
                }
                count++;
                return "None";
        }
        return msg;
    },
    //> public void label()
    label:function(){
        outer:
        for (var i=0;i<10;i++){
            for (var j=10;j>0;j--){
                if(j===5){
                    break outer;
                }
            }
        }
        outer:
        for (var i=0;i<10;i++){
            for (var j=10;j>0;j--){
                if(j===5){
                    continue outer;
                }
            }
        }
    }
})
.endType();