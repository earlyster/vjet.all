package org.eclipse.vjet.dsf.javatojs.tests.data.structure;


import org.eclipse.vjet.dsf.javatojs.tests.data.PersonJsr;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;
import org.eclipse.vjet.dsf.javatojs.tests.data.Person;
import org.eclipse.vjet.vsf.jsref.d.*;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class InheritanceTestJsr extends PersonJsr {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.javatojs.tests.data.structure.InheritanceTest", InheritanceTestJsr.class, "InheritanceTest");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() { return SPEC; }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
        }
    public static final IComponentSpec SPEC = S.getResourceSpec()
    .addDependentComponent(PersonJsr.ResourceSpec.getInstance());

    public InheritanceTestJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected InheritanceTestJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }
}