/* @org.eclipse.vjet.dsf.resource.utils.CodeGen("VjoGenerator") */
vjo.ctype('org.eclipse.vjet.dsf.javatojs.tests.data.structure.Generics<Ctx,Ctx2 extends Date>') //< public
.needs('org.eclipse.vjet.vjo.java.util.HashMap')
//> needs org.eclipse.vjet.vjo.java.util.List,org.eclipse.vjet.vjo.java.util.Map,org.eclipse.vjet.vjo.java.util.Set,org.eclipse.vjet.vjo.java.lang.Integer
.inherits('org.eclipse.vjet.vjo.java.util.ArrayList<Ctx>')
.protos({
    m_list:null, //< private List<? extends Ctx> m_list
    m_list2:null, //< private List<Ctx2> m_list2
    m_map:null, //< private Map<Ctx,Generics<Ctx,Ctx2>> m_map
    m_ctxArray:null, //< private Ctx[]
    //> public constructs()
    constructs:function(){
        this.m_map=new this.vj$.HashMap();
    },
    //> public List<? extends Ctx> convert(List<? extends Ctx> value)
    convert:function(value){
        return null;
    },
    //> public List<? extends Ctx2> convert2(Object value)
    convert2:function(value){
        return null;
    },
    //> public Map<Ctx,Generics<Ctx,Ctx2>> getMap()
    getMap:function(){
        return this.m_map;
    },
    //> public Ctx[] getArray()
    getArray:function(){
        return this.m_ctxArray;
    },
    //> public <R,S extends List<Date>> List<? extends R> convertAny(Ctx ctx,List<? extends R> converter,Object value)
    convertAny:function(ctx,converter,value){
        return null;
    },
    //> public <T,S,M,K> org.eclipse.vjet.vjo.java.util.Set<T> testMethod9(S p1,M p2,K p3)
    testMethod9:function(p1,p2,p3){
        return null;
    },
    //> public Map<String,String> getStringMap()
    getStringMap:function(){
        return null;
    },
    //> public List<Integer> testMethod10(List<? extends Ctx> myList)
    testMethod10:function(myList){
        var out=new this.vj$.ArrayList(); //<List
        for (var i=0;i<myList.size();i++){
            out.add(myList.get(i).toString().length);
        }
        return out;
    }
})
.endType();