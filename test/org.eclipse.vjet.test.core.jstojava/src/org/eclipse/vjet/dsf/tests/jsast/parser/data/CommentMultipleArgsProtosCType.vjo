vjo.ctype("org.eclipse.vjet.dsf.tests.jsast.parser.data.CommentPropsMultipleArgsCType")
.protos({
   //0
   //multiple arg of itself
   //> public void foo0({boolean} arg0)
   foo0: function(arg0) {
   },

   //1
   //multiple arg of itself as a wrapper
   //> public void foo1({Character} arg0)
   foo1: function(arg0) {
   },

   //2
   //multiple arg of itself twice
   //> public void foo2({short|short} arg0)
   foo2: function(arg0) {
   },

   //3
   //multiple arg of itself twice as a wrapper
   //> public void foo3({Integer|Integer} arg0)
   foo3: function(arg0) {
   },

   //4
   //multiple arg of itself as a primitive and as a wrapper
   //> public void foo4({int|Integer} arg0)
   foo4: function(arg0) {
   },

   //5
   //arg followed by multiple arg
   //> public void foo5(boolean arg0, {char|short} arg1)
   foo5: function(arg0,arg1) {
   },

   //6
   //multiple arg followed by arg
   //> public void foo6( {int|long} arg0, float arg1)
   foo6: function(arg0,arg1) {
   },

   //7
   //multiple arg followed by multiple arg
   //> public void foo7( {double|String} arg0, {java.util.Date|Boolean}arg1)
   foo7: function(arg0,arg1) {
   },

   //8
   //multiple arg followed by one optional arg
   //> public void foo8( {Character|Short} arg0, Integer? oarg1)
   foo8: function(arg0,oarg1) {
   },

   //9
   //multiple arg followed by two optional arg
   //> public void foo9( {Long|Float} arg0, Double? oarg1, String? oarg2)
   foo9: function(arg0,oarg1,oarg2) {
   },

   //10
   //multiple arg followed by one optional multiple arg
   //> public void foo10( {java.util.Date|boolean} arg0, {char|short}? oarg1)
   foo10: function(arg0,oarg1) {
   },

   //11
   //multiple arg followed by two optional multiple arg
   //> public void foo11( {int|long} arg0, {float|double}? arg1, {String|java.util.Date}? arg2)
   foo11: function(arg0,arg1,arg2) {
   },

   //12
   //multiple arg followed by var arg
   //> public void foo12( {boolean|char} arg0, short... vargs)
   foo12: function(arg0,vargs) {
   },

   //13
   //3 multiple args
   //> public void foo13( {int|long|float} arg0, {double|String} arg1, {java.util.Date} arg2)
   foo13: function(arg0,arg1,arg2) {
   },

   //14
   //2 multiple args with wrappers
   //> public void foo14( {boolean|int} arg0, {Integer|Boolean} arg1 )
   foo14: function(arg0,arg1) {
   },

   //15
   //one of each
   //> public void foo15( {boolean|char|short|int|long|float|double|String|java.util.Date|Boolean|Character|Short|Integer|Long|Float|Double} arg0 ) 
   foo15: function(arg0) {
   },

   //16
   //first arg is one of each, second arg is one of each 
   //> public void foo16( {boolean|char|short|int|long|float|double|String|java.util.Date|Boolean|Character|Short|Integer|Long|Float|Double} arg0, {boolean|char|short|int|long|float|double|String|java.util.Date|Boolean|Character|Short|Integer|Long|Float|Double} arg1)
   foo16: function(arg0,arg1) {
   }
})
