package vjo.a.b;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.dsf.common.binding.IValueBinding;
import org.eclipse.vjet.vsf.jsref.JsObj;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;
import java.util.Date;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class CTypePropsMethodsArgs10Jsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("vjo.a.b.CTypePropsMethodsArgs10", CTypePropsMethodsArgs10Jsr.class, "CTypePropsMethodsArgs10");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec();

    public CTypePropsMethodsArgs10Jsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected CTypePropsMethodsArgs10Jsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public static JsFunc<Void> foo10(String[]... arg0){
        return call(S, "foo10").with((Object)arg0);
    }

    public static JsFunc<Void> foo10(IValueBinding<String[]>... arg0){
        return call(S, "foo10").with(arg0);
    }

    public static JsFunc<Void> foo10d(Date[]... arg0){
        return call(S, "foo10d").with((Object)arg0);
    }

    public static JsFunc<Void> foo10d(IValueBinding<Date[]>... arg0){
        return call(S, "foo10d").with(arg0);
    }
    
    public static JsTypeRef<CTypePropsMethodsArgs10Jsr> prototype = new JsTypeRef<CTypePropsMethodsArgs10Jsr>(S);
}