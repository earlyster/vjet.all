vjo.type("org.eclipse.vjet.dsf.jstojava.codegen.data.CTypeComplex")
.needs("org.eclipse.vjet.dsf.jstojava.codegen.data.AType")
.needs("org.eclipse.vjet.dsf.jstojava.codegen.data.IType")
.inherits("org.eclipse.vjet.dsf.jstojava.codegen.data.AType")
.satisfies("org.eclipse.vjet.dsf.jstojava.codegen.data.IType")
.mixin("org.eclipse.vjet.dsf.jstojava.codegen.data.MType")
.props({
	/**
	 * add js doc for testing parser
	 * @ sPropOne
	 */
	//> public String sPropOne
	sProp1:"Static Default",
	/**
	 * @ sPropTwo
	 */
	//> public int sPropTwo
	sProp2:42,
	/**
	 * add js doc for testing parser
	 * @param {String} optional arg
	 */
	//> public void doItStaticAbstract(String [arg])
	doItStaticAbstract:function(arg){
	 	alert("simplevjocommented: doItAbstract");
	},
	
	//> public void hasOptionalParamStatic({String|char} pParam1, {boolean|String} [pOptParam2], String [pOptParam3], String [pOptParam4])
	hasOptionalParamStatic : function (pParam1, pOptParam2, pOptParam3, pOptParam4) {
		alert(pParam1 + "," + pOptParam2 + "," + pOptParam3 + "," + pOptParam4);
	},

    //> public void staticMethod()
    staticMethodI2: function(){
    	alert("I2");
    },

    //> public void staticMethod()
    staticMethodI3: function(){
    	alert("I3");
    } 
	
})
.protos({
	//> public String propOne
	prop1:"Default",
	//> public int propTwo
	prop2:23,
	
	//> public java.util.Date propThree
	propThree : null,
	
	//> public void constructs(String arg1)
	constructs:function(arg1){
	 	this.base(arg1);
	 	alert("contructing");
	},
	 
	//> public void doItAbstract(String arg)
	doItAbstract : function (arg) {
	 	alert("simplevjocommented: doItStaticAbstract");
	},
	
	//Following satisfies iType
	//> public void instanceMethod()
	instanceMethod : function () {
		alert("simplevjocommented: instanceMethod");
	},

	//> public void instanceMethod2(String [arg])
	instanceMethod2 : function (arg) {
		alert("simplevjocommented: instanceMethod\n arg: " + arg);
	},

	//> public void hasOptionalParam(int [pOptParam])
	hasOptionalParam : function (pOptParam) {
		if (pOptParam) {
			alert(pOptParam);
		}
	},
	
	//> public void hasOptionalParam({int|String|Long} pParam)
	hasMultiTypeParam : function (pParam) {
		if (pParam) {
			alert(pParam);
		}
	},
	
    //> public void instanceMethod2(String arg)
    instanceMethodI2:function(arg){
    	alert(arg);
    },
    
    //> public void instanceMethod2(String arg)
    instanceMethodI3:function(arg){
    	alert(arg);
    },
    
	//> public void methodAbstract(String arg)
	methodAbstract:function(arg){
		alert(arg);
	}
     
});