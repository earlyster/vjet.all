<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="copyright"
	content="Copyright (c) 2012 eBay Inc. and others.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
    eBay Inc. - initial API and implementation">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="stylesheet" href="../../book.css" charset="ISO-8859-1"
	type="text/css">
<script language="JavaScript"
	src="PLUGINS_ROOT/org.eclipse.help/livehelp.js">
	
</script>
<title>VJET JavaScript Code Assistance</title>
</head>

<body>
	<p class="nav_footer">
		Previous Section: <a href="vjet_type_libraries.htm">VJET JS Type
			Libraries</a>
	</p>
	<h1>VJET JS Code Assistance</h1>
	<p>Based on metadata provided by VJET JS Type Libraries, the code
		assistance features help developers to code efficiently and
		accurately. These features are similar to those available in the
		Eclipse Java plugin; you can refer to Eclipse Help for more
		information.</p>
	<ul>
		<li>Code Assist</li>
		<li>Validation</li>
		<li>Syntax and Semantic Checking</li>
		<li>Help</li>
	</ul>

	<h2>Code Assist</h2>
	<p>
		Press <b>Ctrl-Space</b> for code assist, which displays an 'as you
		type' list of code proposals. Use the arrow keys to scroll the list,
		and press the <b>Enter</b> key to insert the selected code.
	</p>
	<!-- 	<p>In the example, note the proposals include primitive JavaScript types and DOM types,  type libraries.</p>
	    	<p><img src="../images/bTutorial/code_assist.gif" alt="Code assist"></p> -->
	<!-- <p><img src="../images/bTutorial/code_assist2.gif" alt="Code assist"></p> -->
	<p>Code assist displays Help as you scroll through the options.</p>
	<p>
		<img src="../images/bTutorial/help_hover3.gif" alt="Code Assist Help">
	</p>
	<h3>Functions</h3>
	<p></p>
	Function code assist displays arguments and return types.
	</p>
	<p>
		<img src="../images/bTutorial/code_assist_function.gif"
			alt="Code Assist Function">
	</p>
	<p>Upon selection, the function is inserted with arguments and a
		hover over help tip.</p>
	<p>
		<img src="../images/bTutorial/code_assist_function3.gif"
			alt="Code Assist Function Completion">
	</p>
	<h3>Object Literals</h3>
	<p>
		Object Literal code assist displays a list of the object literal's
		properties. Note the question mark ('?') in the proposal. This
		indicates that the property is optional. In the example,
		<code>duration</code>
		is required, the other properties are optional.
	</p>
	<p>
		<img src="../images/bTutorial/code_assist_ol2.gif"
			alt="Code Assist OL">
	</p>
	<p>
		Property requirements are enforced. In the example,
		<code>duration</code>
		is required, so VJET displays an error marker.
	</p>
	<p>
		<img src="../images/bTutorial/code_assist_required.gif"
			alt="Code Assist Required Prop ">
	</p>
	<p>Once the required property is added, the error marker
		disappears.</p>
	<p>
		<img src="../images/bTutorial/code_assist_required_met.gif"
			alt="Code Assist Required Prop Met">
	</p>
	<h3>Callbacks</h3>
	<p>
		The example includes a callback within the object literal. Code assist
		recognizes that
		<code>node</code>
		is a Node type, and proposes the appropriate code options.
	</p>
	<p>
		<img src="../images/bTutorial/code_assist_callback2.gif"
			alt="Callback">
	</p>
	<p>Code assist also recognizes when the function definition should
		not return a value, and displays an error marker when a return is
		added.</p>
	<p>
		<img src="../images/bTutorial/code_assist_callback_return_err2.gif"
			alt="Callback Return Error">
	</p>
	<p>Hover over the error marker to display the error message.</p>
	<p>
		<img src="../images/bTutorial/code_assist_callback_return_errMsg2.gif"
			alt="Callback Return Error Msg">
	</p>


	<h2>Code Validation Errors</h2>
	<p>VJET JS detects validation errors and marks incorrect code.
		Hover over the error marker for the error message, or go to the
		Problems View for detailed information.</p>

	<p>
		<img src="../images/bTutorial/validation.gif" alt="Code Validation">
	</p>
	<p>
		<img src="../images/bTutorial/validation_hover.gif"
			alt="Validation Hover Help">
	</p>
	<p>Details of validation errors appear in the Problems View.</p>
	<p>
		<img src="../images/bTutorial/validation_problemsView.gif"
			alt="Validation Message in Problems View">
	</p>

	<h2>Semantic Checking</h2>
	<p>VJET JS detects semantic errors and marks the incorrect code.
		Hover over the error marker for the error message.</p>
	<p>
		<img src="../images/bTutorial/code_assist_semantic.gif"
			alt="Semantic Error">
	</p>
	<p>
		<img src="../images/bTutorial/code_assist_semantic_msg2.gif"
			alt="Semantic Error Hover Help">
	</p>
	<h2>Syntax Checking</h2>
	<p>VJET JS detects syntax errors and marks the incorrect code.
		Hover over the error marker for the error message.</p>
	<p>
		<img src="../images/bTutorial/syntax.gif" alt="Syntax Error">
	</p>
	<p>
		<img src="../images/bTutorial/syntax2.gif"
			alt="Syntax Error Hover Help">
	</p>

	<h2>Hover Help</h2>
	<p>
		Placing the cursor over an entity is another way to display Help. Some
		help content is large and will be truncated; press the <b>F2</b> key
		to display the full help content.
	</p>
	<p>
		<img src="../images/bTutorial/help_hover4.gif" alt="Hover Help">
	</p>
	<!-- 
	<ol>	
	  <li>
	    There are three ways to open the new VJET Type page.
	    <ul type="square">
	      <li>
	    	In the Script Explorer view, select the <em>VJETProject</em> project, right click on the <em>src</em> folder, from the context menu item select
	    	<b>New &gt; VJET TYPE</b> to open the
	    	<a class="command-link" href='javascript:executeCommand("org.eclipse.ui.newWizard(newWizardId=org.eclipse.vjet.eclipse.ui.VjoClassCreationWizard)")'>
	    	<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="Open the new VJET type wizard"> 
	    	<b>New VJET Type</b></a> wizard.
	   	  </li>
	   	  <li>
	    	Select the menu item <b>File &gt; New &gt; VJET Type</b> to open this page.
	      </li>
	      <li>
	        In the Script Explorer view, select the <em>src</em> folder and click <b>New &gt; VJET Type</b> button in the VJET toolbar.
	      </li>
	    </ul>
  	  	<p><img src="../images/bTutorial/new_type.gif" alt="New VJET Type"></p>
	  </li>

  	  <li>
  	    In the <b>Package</b> field, type <em>test</em> as the package name. 
  	    <p>In the <b>Name</b> field, type <em>Test</em> as the type name.</p>
  	  	<p>Select the checkbox for <b>public void main(String... arguments)</b> method for generating a method stub. 
  	  	<p><img src="../images/bTutorial/new_type_test.gif" alt="New VJET Type"></p>
  	  	<p><em>NOTE: If you do not create a VJET package under the source folder, a default package will be provided.</em></p>
  	  </li>
  	  
  	  <li>Click <b>Finish</b> to create the new type.</li>
  	  
  	  <li>
  	    The new file will be opened in the editor area. It contains the new type, the main method and comments.
  	    <p>Type <em>vjo.sysout.println("Hello World");</em> inside the main function.</p>
  	    <p>The picture below shows an example: </p>
  	    <p><img src= "../images/bTutorial/type_test.gif" alt="new VJET Type"></p>
  	  </li>
  	  
  	  <li>
  	    Save the file.
  	  </li>
  	  
  	  <li>
  	    Instead of create your package on the <b>new VJET Type page</b>, you can choose create your package at first.
  	    <p>Like <em>Step 1</em> there are also three ways for you to create a VJET package.</p>
  	    <ul type="square">
	      <li>
	    	In the Script Explorer view, select the <em>VJETProject</em> project, right click on the <em>src</em> folder, select the context menu item 
	    	<b>New &gt; VJET Package</b> to open the
	    	<a class="command-link" href='javascript:executeCommand("org.eclipse.ui.newWizard(newWizardId=org.eclipse.vjet.eclipse.ui.VjoPackageCreationWizard)")'>
	    	<img src="PLUGINS_ROOT/org.eclipse.help/command_link.png" alt="Open the new VJET package wizard"> 
	    	<b>New VJET Package</b></a> wizard.
	   	  </li>
	   	  <li>
	    	Select the menu item <b>File &gt; New &gt; VJET Package</b> to open this page.
	      </li>
	      <li>
	        In the Script Explorer view, select the <em>src</em> folder and click <b>New &gt; VJET Package</b> button in the VJET toolbar.
	      </li>
	    </ul>
	    <p><img src="../images/bTutorial/new_package.gif" alt="Open the new VJET package wizard ">
  	  </li>
  	  
  	  <li>
  	    In the <b>Name</b> field, type <em>test</em> as the package name.
  	  </li>
	</ol>
	 -->
	<p class="nav_footer">
		Next Section: <a href="development_assistance.htm">VJET JS
			Development Assistance</a>
	</p>

	<p>
		<img src="../../images/ngrelr.png" alt="Related reference">
	</p>
	<!-- 
    <ul>
      <li><a href="../../reference/wizards/new_vjo_type_wizard.htm">New VJET Type Wizard</a></li>
      <li><a href="../../reference/wizards/new_vjo_package_wizard.htm">New VJET Package Wizard</a></li>
      <li><a href="../../reference/menus/menu_file.htm">File Menu Actions</a></li>
      <li><a href="../../reference/menus/vjo_toolbar.htm">VJET Toolbar Actions</a></li>
      <li><a href="../../reference/views/script_explorer_view.htm">Script Explorer View</a></li>
    </ul>   -->
</body>
</html>

