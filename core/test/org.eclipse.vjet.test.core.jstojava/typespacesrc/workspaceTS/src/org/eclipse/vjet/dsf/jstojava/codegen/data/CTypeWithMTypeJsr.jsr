package org.eclipse.vjet.dsf.jstojava.codegen.data;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.dsf.common.binding.IValueBinding;
import org.eclipse.vjet.vsf.jsref.JsObj;
import org.eclipse.vjet.vsf.jsref.JsProp;
import org.eclipse.vjet.vsf.jsruntime.jsref.IJsPropSetter;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;
import org.eclipse.vjet.dsf.jstojava.codegen.data.MTypeJsr;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class CTypeWithMTypeJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.jstojava.codegen.data.CTypeWithMType", CTypeWithMTypeJsr.class, "CTypeWithMType");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec()
        .addDependentComponent(MTypeJsr.ResourceSpec.getInstance());

    public CTypeWithMTypeJsr(String arg1){
        super(S.getJsCmpMeta(), true, arg1);
    }

    public CTypeWithMTypeJsr(IValueBinding<String> arg1){
        super(S.getJsCmpMeta(), true, arg1);
    }

    protected CTypeWithMTypeJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public static JsProp<String> sProp1(){
        return getProp(S, String.class, "sProp1");
    }

    public static IJsPropSetter sProp1(String v) {
        return setProp(S, "sProp1", v);
    }

    public static IJsPropSetter sProp1(IValueBinding<String> v) {
        return setProp(S, "sProp1", v);
    }

    public static JsProp<String> s_mixinPropOne(){
        return getProp(S, String.class, "s_mixinPropOne");
    }

    public static IJsPropSetter s_mixinPropOne(String v) {
        return setProp(S, "s_mixinPropOne", v);
    }

    public static IJsPropSetter s_mixinPropOne(IValueBinding<String> v) {
        return setProp(S, "s_mixinPropOne", v);
    }

    public static JsFunc<Void> staticMethod(){
        return call(S, "staticMethod");
    }

    public static JsFunc<Void> mixinStaticMethod(){
        return call(S, "mixinStaticMethod");
    }

    public JsProp<String> prop1(){
        return getProp(String.class, "prop1");
    }

    public IJsPropSetter prop1(String v) {
        return setProp("prop1", v);
    }

    public IJsPropSetter prop1(IValueBinding<String> v) {
        return setProp("prop1", v);
    }

    public JsProp<String> mixinPropOne(){
        return getProp(String.class, "mixinPropOne");
    }

    public IJsPropSetter mixinPropOne(String v) {
        return setProp("mixinPropOne", v);
    }

    public IJsPropSetter mixinPropOne(IValueBinding<String> v) {
        return setProp("mixinPropOne", v);
    }

    public JsFunc<Void> instanceMethod(){
        return call("instanceMethod");
    }

    public JsFunc<Void> mixinInstanceMethod(){
        return call("mixinInstanceMethod");
    }
    
    public static JsTypeRef<CTypeWithMTypeJsr> prototype = new JsTypeRef<CTypeWithMTypeJsr>(S);
}