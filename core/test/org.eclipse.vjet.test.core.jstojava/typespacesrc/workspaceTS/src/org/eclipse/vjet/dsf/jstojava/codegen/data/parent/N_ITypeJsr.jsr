package org.eclipse.vjet.dsf.jstojava.codegen.data.parent;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.vsf.jsref.JsProp;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public interface N_ITypeJsr {
    JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.jstojava.codegen.data.parent.N_IType", N_ITypeJsr.class, "N_IType");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec();

    public static final class PROPS{
        public static final JsProp<Integer> I_COUNT(){
            return new JsProp<Integer>(S.getStaticAnchor(), "I_COUNT");
        }
    public static final JsProp<Integer> I_COUNT_OVERRIDE(){
            return new JsProp<Integer>(S.getStaticAnchor(), "I_COUNT_OVERRIDE");
        }
    }

    public abstract JsFunc<Void> i_foo_override();
    
    public static JsTypeRef<N_ITypeJsr> prototype = new JsTypeRef<N_ITypeJsr>(S);
}