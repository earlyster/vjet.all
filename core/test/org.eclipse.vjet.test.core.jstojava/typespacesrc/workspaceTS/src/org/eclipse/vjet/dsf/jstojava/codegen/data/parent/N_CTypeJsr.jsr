package org.eclipse.vjet.dsf.jstojava.codegen.data.parent;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.dsf.common.binding.IValueBinding;
import org.eclipse.vjet.vsf.jsref.JsObj;
import org.eclipse.vjet.vsf.jsref.JsProp;
import org.eclipse.vjet.vsf.jsruntime.jsref.IJsPropSetter;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class N_CTypeJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.jstojava.codegen.data.parent.N_CType", N_CTypeJsr.class, "N_CType");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec();

    public N_CTypeJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected N_CTypeJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public static final JsProp<Integer> P_SF_COUNT(){
        return getProp(S, Integer.class, "P_SF_COUNT");
    }

    public static JsProp<Integer> p_s_count(){
        return getProp(S, Integer.class, "p_s_count");
    }

    public static IJsPropSetter p_s_count(int v) {
        return setProp(S, "p_s_count", v);
    }

    public static IJsPropSetter p_s_count(IValueBinding<Integer> v) {
        return setProp(S, "p_s_count", v);
    }

    public static JsProp<Integer> p_s_count_override(){
        return getProp(S, Integer.class, "p_s_count_override");
    }

    public static IJsPropSetter p_s_count_override(int v) {
        return setProp(S, "p_s_count_override", v);
    }

    public static IJsPropSetter p_s_count_override(IValueBinding<Integer> v) {
        return setProp(S, "p_s_count_override", v);
    }

    public static final JsFunc<Void> p_sf_foo(){
        return call(S, "p_sf_foo");
    }

    public static JsFunc<Void> p_s_foo(){
        return call(S, "p_s_foo");
    }

    public static JsFunc<Void> p_s_foo_override(){
        return call(S, "p_s_foo_override");
    }

    public final JsProp<Integer> P_F_COUNT(){
        return getProp(Integer.class, "P_F_COUNT");
    }

    public JsProp<Integer> p_count(){
        return getProp(Integer.class, "p_count");
    }

    public IJsPropSetter p_count(int v) {
        return setProp("p_count", v);
    }

    public IJsPropSetter p_count(IValueBinding<Integer> v) {
        return setProp("p_count", v);
    }

    public JsProp<Integer> p_count_override(){
        return getProp(Integer.class, "p_count_override");
    }

    public IJsPropSetter p_count_override(int v) {
        return setProp("p_count_override", v);
    }

    public IJsPropSetter p_count_override(IValueBinding<Integer> v) {
        return setProp("p_count_override", v);
    }

    public JsFunc<Void> p_foo(){
        return call("p_foo");
    }

    public JsFunc<Void> p_foo_override(){
        return call("p_foo_override");
    }
    
    public static JsTypeRef<N_CTypeJsr> prototype = new JsTypeRef<N_CTypeJsr>(S);
}