package org.eclipse.vjet.dsf.jstojava.codegen.data;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.dsf.common.binding.IValueBinding;
import org.eclipse.vjet.vsf.jsref.JsObj;
import org.eclipse.vjet.vsf.jsref.JsProp;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class StaticFinalsJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.jstojava.codegen.data.StaticFinals", StaticFinalsJsr.class, "StaticFinals");

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec();

    public StaticFinalsJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected StaticFinalsJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public static final JsProp<String> S_PROP_ONE(){
        return getProp(S, String.class, "S_PROP_ONE");
    }

    public static final JsProp<Long> S_PROP_TWO(){
        return getProp(S, Long.class, "S_PROP_TWO");
    }

    public static final JsProp<Boolean> S_PROP_THREE(){
        return getProp(S, Boolean.class, "S_PROP_THREE");
    }

    public static final JsProp<Integer> S_PROP_FOUR(){
        return getProp(S, Integer.class, "S_PROP_FOUR");
    }

    public static final JsFunc<Boolean> staticMethod(){
        return call(S, Boolean.class, "staticMethod");
    }

    public static final JsFunc<Integer> staticMethod2(int arg){
        return call(S, Integer.class, "staticMethod2").with(arg);
    }

    public static final JsFunc<Integer> staticMethod2(IValueBinding<Integer> arg){
        return call(S, Integer.class, "staticMethod2").with(arg);
    }
    
    public static JsTypeRef<StaticFinalsJsr> prototype = new JsTypeRef<StaticFinalsJsr>(S);
}