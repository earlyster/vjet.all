<?xml version="1.0" encoding="UTF-8"?>
<testcases>
	
<testcase number='1'>
	<file>astjst/ECMAOperators</file>
 
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testPostfixIncrementOp']/JstBlock/PostfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>foo++</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testPostfixDecrementOp']/JstBlock/PostfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>foo--</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testPrefixIncrementOp']/JstBlock/PrefixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>++foo</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testPrefixDecrementOp']/JstBlock/PrefixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>--foo</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
</testcase>

<testcase number='2'>	

	<file>astjst/ECMAOperators</file>

	<jxpath>
		<pathname>JstType/JstMethod[@Name='testUnaryPlusOp']/JstBlock/PrefixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>+foo</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testUnaryMinusOp']/JstBlock/PrefixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>-foo</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
</testcase>

<testcase number='3'>	

	<file>astjst/ECMAOperators</file>

	<jxpath>
		<pathname>JstType/JstMethod[@Name='testArithemticOp']/JstBlock/AssignExpr[@Position='1']/InfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1*num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testArithemticOp']/JstBlock/AssignExpr[@Position='2']/InfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1/num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testArithemticOp']/JstBlock/AssignExpr[@Position='3']/InfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1%num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testArithemticOp']/JstBlock/AssignExpr[@Position='4']/InfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1+num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testArithemticOp']/JstBlock/AssignExpr[@Position='5']/InfixExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1-num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='1']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode><![CDATA[num1<num2]]></bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='2']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode><![CDATA[num1>num2]]></bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>
		
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='3']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode><![CDATA[num1<=num2]]></bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='4']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode><![CDATA[num1>=num2]]></bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='5']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1==num2</bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>	
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='6']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1!=num2</bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>

	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='7']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1===num2</bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>	
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testRelationalOp']/JstBlock/AssignExpr[@Position='8']/BoolExpr</pathname>
		<nodecount>1</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1!==num2</bindingnode>
			<bindingtype>boolean</bindingtype>
		</node>
	</jxpath>	
		
</testcase>


<testcase number='4'>	

	<file>astjst/ECMAOperators</file>
	
	<jxpath>
		<pathname>JstType/JstMethod[@Name='testCompoundAssignmentOp']/JstBlock/AssignExpr</pathname>
		<nodecount>11</nodecount>
		<node position='1' status='pass'>
			<bindingnode>num1+=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='2' status='pass'>
			<bindingnode>num1-=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='3' status='pass'>
			<bindingnode>num1*=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='4' status='pass'>
			<bindingnode>num1/=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='5' status='pass'>
			<bindingnode>num1%=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='6' status='pass'>
			<bindingnode><![CDATA[num1&=num2]]></bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='7' status='pass'>
			<bindingnode>num1^=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='8' status='pass'>
			<bindingnode>num1|=num2</bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='9' status='pass'>
			<bindingnode><![CDATA[num1<<=num2]]></bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='10' status='pass'>
			<bindingnode><![CDATA[num1>>=num2]]></bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
		<node position='11' status='pass'>
			<bindingnode><![CDATA[num1>>>=num2]]></bindingnode>
			<bindingtype>Number</bindingtype>
		</node>
	</jxpath>
	
</testcase>

</testcases>

