/* @org.eclipse.vjet.dsf.resource.utils.CodeGen("VjoGenerator") */
vjo.ctype('org.eclipse.vjet.dsf.javatojs.tests.data.structure.autoboxing.NumericAutoBoxing') //< public
.needs('org.eclipse.vjet.vjo.java.lang.Integer')
.protos({
    aI:null, //< Integer
    bI:null, //< Integer
    cI:null, //< Integer
    dI:null, //< Integer
    eI:null, //< Integer
    fI:null, //< Integer
    gI:null, //< Integer
    hI:null, //< Integer
    iI:null, //< Integer
    jI:null, //< Integer
    ai:2, //< int
    bi:0, //< int
    ci:0, //< int
    di:0, //< int
    ei:0, //< int
    fi:0, //< int
    gi:0, //< int
    hi:0, //< int
    ii:0, //< int
    ji:0, //< int
    //> public constructs()
    constructs:function(){
        this.aI=new this.vj$.Integer(2);
        this.bI=new this.vj$.Integer(1+this.aI.intValue()+2+this.aI.intValue()+3);
        this.cI=new this.vj$.Integer(1+ ++this.aI.intValue()+2+this.aI.intValue()-- +3);
        this.dI=new this.vj$.Integer(++this.aI.intValue());
        this.eI=new this.vj$.Integer(++this.aI.intValue()+1);
        this.fI=new this.vj$.Integer(this.aI.intValue()--);
        this.gI=new this.vj$.Integer(this.aI.intValue()-- +1);
        this.hI=new this.vj$.Integer((++this.aI.intValue()));
        this.iI=new this.vj$.Integer((this.aI=new this.vj$.Integer(3)).intValue()+4);
        this.jI=new this.vj$.Integer(2+(this.aI=new this.vj$.Integer(3)).intValue()+4);
        this.bi=1+this.aI.intValue()+2+this.aI.intValue()+3;
        this.ci=1+ ++this.aI.intValue()+2+this.aI.intValue()-- +3;
        this.di=++this.aI.intValue();
        this.ei=++this.aI.intValue()+1;
        this.fi=this.aI.intValue()--;
        this.gi=this.aI.intValue()-- +1;
        this.hi=(++this.aI.intValue());
        this.ii=(this.aI=new this.vj$.Integer(3)).intValue()+4;
        this.ji=2+(this.aI=new this.vj$.Integer(3)).intValue()+4;
    },
    //> public void assignment()
    assignment:function(){
        this.aI=new this.vj$.Integer(2);
        this.bI=new this.vj$.Integer(1+this.aI.intValue()+2+this.aI.intValue()+3);
        this.cI=new this.vj$.Integer(1+ ++this.aI.intValue()+2+this.aI.intValue()-- +3);
        this.dI=new this.vj$.Integer(++this.aI.intValue());
        this.eI=new this.vj$.Integer(++this.aI.intValue()+1);
        var fI=new this.vj$.Integer(this.aI.intValue()--); //<Integer
        var gI=new this.vj$.Integer(this.aI.intValue()-- +1); //<Integer
        var hI=new this.vj$.Integer((++this.aI.intValue())); //<Integer
        var iI=new this.vj$.Integer((this.aI=new this.vj$.Integer(3)).intValue()+4); //<Integer
        var jI=new this.vj$.Integer(2+(this.aI=new this.vj$.Integer(3)).intValue()+4); //<Integer
        this.ai=2;
        this.bi=1+this.aI.intValue()+2+this.aI.intValue()+3;
        this.ci=1+ ++this.aI.intValue()+2+this.aI.intValue()-- +3;
        this.di=++this.aI.intValue();
        this.ei=++this.aI.intValue()+1;
        var fi=this.aI.intValue()--; //<int
        var gi=this.aI.intValue()-- +1; //<int
        var hi=(++this.aI.intValue()); //<int
        var ii=(this.aI=new this.vj$.Integer(3)).intValue()+4; //<int
        var ji=2+(this.aI=new this.vj$.Integer(3)).intValue()+4; //<int
    },
    //> public void mtdInvocation()
    mtdInvocation:function(){
        this.foo(new this.vj$.Integer(2));
        this.foo(new this.vj$.Integer(1+this.aI.intValue()+2+this.aI.intValue()+3));
        this.foo(new this.vj$.Integer(1+ ++this.aI.intValue()+2+this.aI.intValue()-- +3));
        this.foo(new this.vj$.Integer(++this.aI.intValue()));
        this.foo(new this.vj$.Integer(++this.aI.intValue()+1));
        this.foo(new this.vj$.Integer(this.aI.intValue()--));
        this.foo(new this.vj$.Integer(this.aI.intValue()-- +1));
        this.foo(new this.vj$.Integer((++this.aI.intValue())));
        this.foo(new this.vj$.Integer((this.aI=new this.vj$.Integer(3)).intValue()+4));
        this.foo(new this.vj$.Integer(2+(this.aI=new this.vj$.Integer(3)).intValue()+4));
    },
    //> void foo(Integer x)
    foo:function(x){
    }
})
.endType();