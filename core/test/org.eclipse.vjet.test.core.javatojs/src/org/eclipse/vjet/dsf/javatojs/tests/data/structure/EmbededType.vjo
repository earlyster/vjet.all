/* @org.eclipse.vjet.dsf.resource.utils.CodeGen("VjoGenerator") */
vjo.ctype('org.eclipse.vjet.dsf.javatojs.tests.data.structure.EmbededType') //< public
.needs(['org.eclipse.vjet.dsf.javatojs.tests.data.IHandler','org.eclipse.vjet.dsf.javatojs.tests.data.BaseHandler',
    'org.eclipse.vjet.dsf.javatojs.tests.data.structure.DefaultHandler'])
.needs('org.eclipse.vjet.dsf.javatojs.tests.data.DefaultHandler','')
.protos({
    //> private void useDefaultType()
    useDefaultType:function(){
        var handler=
            vjo.make(this,org.eclipse.vjet.dsf.javatojs.tests.data.DefaultHandler,true,false)
            .protos({
                handle:function(debug){
                    if(debug){
                        this.log();
                    }
                    return !this.base.handle(debug);
                }
            })
            .endType(); //<IHandler
        var success=handler.handle(true); //<boolean
    },
    //> protected void useBaseType()
    useBaseType:function(){
        var handler=
            vjo.make(this,this.vj$.BaseHandler,true,false)
            .protos({
                handle:function(debug){
                    if(debug){
                        this.log();
                    }
                    return true;
                },
                log:function(){
                    this.base.log();
                }
            })
            .endType(); //<IHandler
        var success=handler.handle(true); //<boolean
    },
    //> void useInterface()
    useInterface:function(){
        var handler=
            vjo.make(this,this.vj$.IHandler)
            .protos({
                handle:function(debug){
                    return !debug;
                }
            })
            .endType(); //<IHandler
        var success=handler.handle(true); //<boolean
    },
    //> public void testImport()
    testImport:function(){
        var h1=new this.vj$.DefaultHandler(); //<DefaultHandler
        var h2=new org.eclipse.vjet.dsf.javatojs.tests.data.DefaultHandler(true,false); //<IHandler
    }
})
.endType();