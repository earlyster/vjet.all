package org.eclipse.vjet.dsf.javatojs.tests.data.datatype;

import org.eclipse.vjet.vsf.jsref.JsFunc;
import org.eclipse.vjet.vsf.jsref.JsObj;
import org.eclipse.vjet.vsf.jsref.internals.JsCmpMeta;
import org.eclipse.vjet.vsf.jsref.JsTypeRef;
import org.eclipse.vjet.vsf.jsref.JsObjData;
import org.eclipse.vjet.dsf.spec.component.IComponentSpec;
import org.eclipse.vjet.vsf.resource.pattern.js.JsResource;
import org.eclipse.vjet.vsf.resource.pattern.js.IJsResourceRef;
import vjo.ClassJsr;

@org.eclipse.vjet.dsf.resource.utils.CodeGen("JsrGenerator")
public class ObjectAndClassJsr extends JsObj {
    private static final long serialVersionUID = 1L;

    private static final JsObjData S = 
        new JsObjData("org.eclipse.vjet.dsf.javatojs.tests.data.datatype.ObjectAndClass", ObjectAndClassJsr.class, "ObjectAndClass", true);

    
    public static class ResourceSpec {
        public static IComponentSpec getInstance() {
            return S.getResourceSpec(); 
        }
        public static final JsResource RESOURCE = S.getJsResource();
        public static final IJsResourceRef REF = S.getJsResourceRef();
    }

    public static final IComponentSpec SPEC = S.getResourceSpec();

    public ObjectAndClassJsr(){
        super(S.getJsCmpMeta(), true);
    }

    protected ObjectAndClassJsr(JsCmpMeta cmpMeta, boolean isInstance, Object... args) {
        super(cmpMeta, isInstance, args);
    }

    public JsFunc<Object> getObject(){
        return call(Object.class, "getObject");
    }

    public JsFunc<? extends ClassJsr> getObjectClass(){
        return call(ClassJsr.class, "getObjectClass");
    }

    public JsFunc<? extends ClassJsr> getObjectClass(Object obj){
        return call(ClassJsr.class, "getObjectClass").with(obj);
    }

    public JsFunc<? extends ClassJsr> getOwnerClass(){
        return call(ClassJsr.class, "getOwnerClass");
    }

    public JsFunc<? extends ClassJsr> getThisClass(){
        return call(ClassJsr.class, "getThisClass");
    }
    
    public static JsTypeRef<ObjectAndClassJsr> prototype = new JsTypeRef<ObjectAndClassJsr>(S);
}